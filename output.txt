### ./srcs/.env
```
DOMAIN_NAME=seokjyan.42.fr

# certificates
SSL_CERT='-----BEGIN CERTIFICATE-----
MIIDazCCAlOgAwIBAgIUIDon4dpuTnI17ZKDneUjzjgb5f0wDQYJKoZIhvcNAQEL
BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNDA4MjYxNDU0NDBaFw0yNTA4
MjYxNDU0NDBaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw
HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQCuGk/KR5YWbaJWw7CwBotBBF2dVm2cYkdMrdOZ42Ip
ZUntCCjkbRT2M5wlqABxb64ll6Yr4KYJroNYyF8O0FMEVnfMN5EGQ37rvdD0Zw0u
SFEULSj2MFBuzpKl7ERIGxWqoXv91FHhEuRW4zIRxMTRMEwxDH8FTEVO11yXB/h7
7VBoHx58W0PhEhaGvnEdVM2tTACAqvRidCMf8H7lqEH545vywpSBu4yKMTm4DZhn
j0ovp2N0bbpJQCvDorOg2Xe8XCvZ+EXDpmzxoYHhssVzHkUESirnNWbFLBIuYFOs
o04FSXH7xCowKP7uoL3FEKFJuODIBoI+QQNmHtgDGrj7AgMBAAGjUzBRMB0GA1Ud
DgQWBBQluQ1aFjjZpfL3ZxYHbmv+fJOD5jAfBgNVHSMEGDAWgBQluQ1aFjjZpfL3
ZxYHbmv+fJOD5jAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQA4
TOZsl/zvXzoBmAgILIIOC87T7bJUb4cRAXXIvUDqvg7/zoMBR3OWj48pCCzmpl0q
ZdNV9hUr+BirMmHsGjT4j+vyFHBjQtqqyhBXFKtvTFbDhFl0AYB+/tn7DCMtOhGz
XDbBhN8oN9J9Hi/OF8meu6LSoSZmjBLDjAF392yRHMcI3/SFmG/aIcoOeuyzU+E4
jYvT0yJP3/AyIhb5g8GbmUnvseBuA30gOu+LZbp9Ia/yRNRo5C6VuIX+qjFCk0id
1ORFtep6w33spaa4rLqE4WZdz0PP6G5mrcGZyjstdS17X7hMLetSXxXSO+dVZfjC
DAOQqC0TtGXGY3BPyJa4
-----END CERTIFICATE-----'
SSL_KEY='-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCuGk/KR5YWbaJW
w7CwBotBBF2dVm2cYkdMrdOZ42IpZUntCCjkbRT2M5wlqABxb64ll6Yr4KYJroNY
yF8O0FMEVnfMN5EGQ37rvdD0Zw0uSFEULSj2MFBuzpKl7ERIGxWqoXv91FHhEuRW
4zIRxMTRMEwxDH8FTEVO11yXB/h77VBoHx58W0PhEhaGvnEdVM2tTACAqvRidCMf
8H7lqEH545vywpSBu4yKMTm4DZhnj0ovp2N0bbpJQCvDorOg2Xe8XCvZ+EXDpmzx
oYHhssVzHkUESirnNWbFLBIuYFOso04FSXH7xCowKP7uoL3FEKFJuODIBoI+QQNm
HtgDGrj7AgMBAAECggEABNrX+cCIR2TUP44iaa4tCOmZwK7tzIwTB+ja+zIThSr9
Zj4xgbkm+fyTcJtgM8mU9hhl+lg/2QpEQGAKAow9nGPa4Fd2VFHigqle38nV3MII
fMMLnt3XCFf7T+QoPUiAEKuDHR9kDx4rPt8EAOnXQSwTG9UI37lyP1ITE2UWAUKf
iZ1nKXJ/UW06GvQFSrTYk4skCrYdUp8Wara3bT7Ud5gu/bhA755wpc2A+3u1QIs2
4mBVq8a3U2F0o+pE6rzIuzz4XSEYGe5EK5SDQO8IQmoZphWL/4hH3y3BELf9ZNJO
y0SmBXr2yMV6igN/U7knuh/+SMem0isWTCKG7k4DVQKBgQDkJNqHWp4ufrl2W5nY
wy6YOIogBOVmz+X2vo7ebAf7LGbZOy2xG990N5Ek8gN7sXQKYRIPKUjT1x21MZnp
6OFspxd251TAtUzbfpH6wTlzRhrJYKh51ulgl01bf1iNJcWK1srNIDArKQVHWJYw
aGIYp2tZGGKByxap7doMEeTYzwKBgQDDXEfp3wmH+2Eqi1yX+FpHnLhozdZ/h/3i
KiubBGlVqXcTRyGmITyk7mAX/05wcfYRSXmEL6JCZWrz5Fhgy9UY4MeHeiyOycxZ
7a1IlnP4h+BiMD8h44Btoq5H8998cygPTjs5U6FoMlFpEjgH+RX9xf4vrSDM/rM2
6JGxR7gQFQKBgG6IjHfXp5vPOfvmFXu31PNbMVCiDqLpRvltCbspjBRdRtconNKa
NoEQCvpjZtye9SGyNhWyYt5/8py/E1sIwW7q5atuGNnk/P+7Ku7afwMijAfVFMsz
HI73vzr9T+HS0wqZVlhbp/rBPRV8DggWCrD3LENWVSOdSbW6z1HZuY5xAoGAahgI
eesFWxLajudGLsXSCYgD4e6/KV0qNJPgQHxh1AKHRzHfBUCRlaRbDU06RPiuwG6d
jnrr7JD1R2Rf1pl7rdoMofdokVboIoJgE8aZToRECC7ZakcJrQCnEy5O1WAYhk9e
/F/9jP+elKgvQ60zEzFePHgSEyHTI+Ojk5o2TI0CgYEAnLp9/qUEG0jCgfAvWwlY
QpYndrq9N/ujb5Cbybomiz03pz5DwWaKUhCVSF55uTb4GoTh19XS9XNCdZETnirb
RNwjPpcPinjGrABst1tH9WSpnAK9CFuaeL1N8frQO/jW16lPGcdv2dcRp9l4ds+N
oL7bLoKMZpuiqDG3aObgGdc=
-----END PRIVATE KEY-----'

# MARIADB SETUP
MYSQL_PWD=1234

# WORDPRESS SETUP
WORDPRESS_DB_HOST=mariadb:3306
WORDPRESS_DB_USER=seokjyan
WORDPRESS_DB_PASSWORD=1234
WORDPRESS_DB_NAME=mydatabase

```

### ./srcs/docker-compose.yml
```.yml
services:
  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    # restart: on-failure
    build:
      context: requirements/mariadb
    cap_add:
      - SYS_ADMIN
    env_file:
      - .env
    volumes:
      - db_volume:/var/lib/mysql
    networks:
      - seokyangNet
    expose:
      - "3306"

  wordpress:
    image: wordpress
    container_name: wordpress
    restart: always
    build:
      context: requirements/wordpress
    env_file:
      - .env
    volumes:
      - wp_volume:/var/www/html
    depends_on:
      - mariadb
    networks:
      - seokyangNet
    expose:
      - "9000"

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    build:
      context: requirements/nginx
    env_file:
      - .env
    volumes:
      - wp_volume:/var/www/html:ro # Read-Only로 마운트
    depends_on:
      - wordpress
    networks:
      - seokyangNet
    ports:
      - "443:443"

volumes:
  wp_volume:
    name: wp_volume
    driver: local
    driver_opts:
      type: none
      device: /Users/seokjyan/data/wordpress
      o: bind
  db_volume:
    name: db_volume
    driver: local
    driver_opts:
      type: none
      device: /Users/seokjyan/data/mariadb
      o: bind

networks:
  seokyangNet:
    driver: bridge

```

### ./srcs/requirements/wordpress/Dockerfile
```
FROM alpine:3.20

# 설치에 필요한 패키지 업데이트 및 설치
RUN apk update && apk add --no-cache \
	php82-common \
	php82-fpm \
	php82-mysqli \
	php82-curl \
	wget \
	curl

# 설정 파일 및 도구 복사
COPY ./tools /var/www/tools
COPY ./conf/www.conf /etc/php82/php-fpm.d/www.conf

# 스크립트에 실행 권한 부여
RUN chmod +x /var/www/tools/entrypoint.sh

# entrypoint.sh 실행
ENTRYPOINT [ "/bin/sh", "/var/www/tools/entrypoint.sh" ]
```

### ./srcs/requirements/wordpress/tools/entrypoint.sh
```.sh
#!/bin/bash
set -e

# 워드프레스를 다운로드하고 압축을 풉니다
wget -q -O /tmp/wordpress.tar.gz "https://wordpress.org/latest.tar.gz"
tar -xzf /tmp/wordpress.tar.gz -C /var/www/html --strip-components=1

# wp-cli를 wget 명령어로 다운로드하고 실행 권한을 부여합니다
wget -q -O /usr/local/bin/wp "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
chmod +x /usr/local/bin/wp

php-fpm82 --nodaemonize
```

### ./srcs/requirements/wordpress/conf/www.conf
```.conf
; Start a new pool named 'www'.
; the variable $pool can be used in any directive and will be replaced by the
; pool name ('www' here)
[www]

; Per pool prefix
; It only applies on the following directives:
; - 'access.log'
; - 'slowlog'
; - 'listen' (unixsocket)
; - 'chroot'
; - 'chdir'
; - 'php_values'
; - 'php_admin_values'
; When not set, the global prefix (or /usr) applies instead.
; Note: This directive can also be relative to the global prefix.
; Default Value: none
;prefix = /path/to/pools/$pool

; Unix user/group of the child processes. This can be used only if the master
; process running user is root. It is set after the child process is created.
; The user and group can be specified either by their name or by their numeric
; IDs.
; Note: If the user is root, the executable needs to be started with
;       --allow-to-run-as-root option to work.
; Default Values: The user is set to master process running user by default.
;                 If the group is not set, the user's group is used.
user = nobody
group = nobody

; The address on which to accept FastCGI requests.
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
;                            a specific port;
;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses
;                            (IPv6 and IPv4-mapped) on a specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.
; Note: This value is mandatory.

; patch
; listen = 127.0.0.1:9000
listen = 0.0.0.0:9000

; Set listen(2) backlog.
; Default Value: 511 (-1 on Linux, FreeBSD and OpenBSD)
;listen.backlog = 511

; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions. The owner
; and group can be specified either by name or by their numeric IDs.
; Default Values: Owner is set to the master process running user. If the group
;                 is not set, the owner's group is used. Mode is set to 0660.
;listen.owner = nobody
;listen.group = nobody
;listen.mode = 0660

; When POSIX Access Control Lists are supported you can set them using
; these options, value is a comma separated list of user/group names.
; When set, listen.owner and listen.group are ignored
;listen.acl_users =
;listen.acl_groups =

; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.
; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original
; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address
; must be separated by a comma. If this value is left blank, connections will be
; accepted from any ip address.
; Default Value: any
;listen.allowed_clients = 127.0.0.1

; Set the associated the route table (FIB). FreeBSD only
; Default Value: -1
;listen.setfib = 1

; Specify the nice(2) priority to apply to the pool processes (only if set)
; The value can vary from -19 (highest priority) to 20 (lower priority)
; Note: - It will only work if the FPM master process is launched as root
;       - The pool processes will inherit the master process priority
;         unless it specified otherwise
; Default Value: no set
; process.priority = -19

; Set the process dumpable flag (PR_SET_DUMPABLE prctl for Linux or
; PROC_TRACE_CTL procctl for FreeBSD) even if the process user
; or group is different than the master process user. It allows to create process
; core dump and ptrace the process for the pool user.
; Default Value: no
; process.dumpable = yes

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
;             pm.max_children      - the maximum number of children that can
;                                    be alive at the same time.
;             pm.start_servers     - the number of children created on startup.
;             pm.min_spare_servers - the minimum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is less than this
;                                    number then some children will be created.
;             pm.max_spare_servers - the maximum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is greater than this
;                                    number then some children will be killed.
;             pm.max_spawn_rate    - the maximum number of rate to spawn child
;                                    processes at once.
;  ondemand - no children are created at startup. Children will be forked when
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that
;                                         can be alive at the same time.
;             pm.process_idle_timeout   - The number of seconds after which
;                                         an idle process will be killed.
; Note: This value is mandatory.
pm = dynamic

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
; Note: This value is mandatory.
pm.max_children = 5

; The number of child processes created on startup.
; Note: Used only when pm is set to 'dynamic'
; Default Value: (min_spare_servers + max_spare_servers) / 2
pm.start_servers = 2

; The desired minimum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.min_spare_servers = 1

; The desired maximum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.max_spare_servers = 3

; The number of rate to spawn child processes at once.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
; Default Value: 32
;pm.max_spawn_rate = 32

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
; Default Value: 10s
;pm.process_idle_timeout = 10s;

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
;pm.max_requests = 500

; The URI to view the FPM status page. If this value is not set, no URI will be
; recognized as a status page. It shows the following information:
;   pool                 - the name of the pool;
;   process manager      - static, dynamic or ondemand;
;   start time           - the date and time FPM has started;
;   start since          - number of seconds since FPM has started;
;   accepted conn        - the number of request accepted by the pool;
;   listen queue         - the number of request in the queue of pending
;                          connections (see backlog in listen(2));
;   max listen queue     - the maximum number of requests in the queue
;                          of pending connections since FPM has started;
;   listen queue len     - the size of the socket queue of pending connections;
;   idle processes       - the number of idle processes;
;   active processes     - the number of active processes;
;   total processes      - the number of idle + active processes;
;   max active processes - the maximum number of active processes since FPM
;                          has started;
;   max children reached - number of times, the process limit has been reached,
;                          when pm tries to start more children (works only for
;                          pm 'dynamic' and 'ondemand');
; Value are updated in real time.
; Example output:
;   pool:                 www
;   process manager:      static
;   start time:           01/Jul/2011:17:53:49 +0200
;   start since:          62636
;   accepted conn:        190460
;   listen queue:         0
;   max listen queue:     1
;   listen queue len:     42
;   idle processes:       4
;   active processes:     11
;   total processes:      15
;   max active processes: 12
;   max children reached: 0
;
; By default the status page output is formatted as text/plain. Passing either
; 'html', 'xml' or 'json' in the query string will return the corresponding
; output syntax. Example:
;   http://www.foo.bar/status
;   http://www.foo.bar/status?json
;   http://www.foo.bar/status?html
;   http://www.foo.bar/status?xml
;
; By default the status page only outputs short status. Passing 'full' in the
; query string will also return status for each pool process.
; Example:
;   http://www.foo.bar/status?full
;   http://www.foo.bar/status?json&full
;   http://www.foo.bar/status?html&full
;   http://www.foo.bar/status?xml&full
; The Full status returns for each process:
;   pid                  - the PID of the process;
;   state                - the state of the process (Idle, Running, ...);
;   start time           - the date and time the process has started;
;   start since          - the number of seconds since the process has started;
;   requests             - the number of requests the process has served;
;   request duration     - the duration in µs of the requests;
;   request method       - the request method (GET, POST, ...);
;   request URI          - the request URI with the query string;
;   content length       - the content length of the request (only with POST);
;   user                 - the user (PHP_AUTH_USER) (or '-' if not set);
;   script               - the main script called (or '-' if not set);
;   last request cpu     - the %cpu the last request consumed
;                          it's always 0 if the process is not in Idle state
;                          because CPU calculation is done when the request
;                          processing has terminated;
;   last request memory  - the max amount of memory the last request consumed
;                          it's always 0 if the process is not in Idle state
;                          because memory calculation is done when the request
;                          processing has terminated;
; If the process is in Idle state, then informations are related to the
; last request the process has served. Otherwise informations are related to
; the current request being served.
; Example output:
;   ************************
;   pid:                  31330
;   state:                Running
;   start time:           01/Jul/2011:17:53:49 +0200
;   start since:          63087
;   requests:             12808
;   request duration:     1250261
;   request method:       GET
;   request URI:          /test_mem.php?N=10000
;   content length:       0
;   user:                 -
;   script:               /home/fat/web/docs/php/test_mem.php
;   last request cpu:     0.00
;   last request memory:  0
;
; Note: There is a real-time FPM status monitoring sample web page available
;       It's available in: /usr/share/php82/fpm/status.html
;
; Note: The value must start with a leading slash (/). The value can be
;       anything, but it may not be a good idea to use the .php extension or it
;       may conflict with a real PHP file.
; Default Value: not set
;pm.status_path = /status

; The address on which to accept FastCGI status request. This creates a new
; invisible pool that can handle requests independently. This is useful
; if the main pool is busy with long running requests because it is still possible
; to get the status before finishing the long running requests.
;
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
;                            a specific port;
;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses
;                            (IPv6 and IPv4-mapped) on a specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.
; Default Value: value of the listen option
;pm.status_listen = 127.0.0.1:9001

; The ping URI to call the monitoring page of FPM. If this value is not set, no
; URI will be recognized as a ping page. This could be used to test from outside
; that FPM is alive and responding, or to
; - create a graph of FPM availability (rrd or such);
; - remove a server from a group if it is not responding (load balancing);
; - trigger alerts for the operating team (24/7).
; Note: The value must start with a leading slash (/). The value can be
;       anything, but it may not be a good idea to use the .php extension or it
;       may conflict with a real PHP file.
; Default Value: not set
;ping.path = /ping

; This directive may be used to customize the response of a ping request. The
; response is formatted as text/plain with a 200 response code.
; Default Value: pong
;ping.response = pong

; The access log file
; Default: not set
;access.log = log/php82/$pool.access.log

; The access log format.
; The following syntax is allowed
;  %%: the '%' character
;  %C: %CPU used by the request
;      it can accept the following format:
;      - %{user}C for user CPU only
;      - %{system}C for system CPU only
;      - %{total}C  for user + system CPU (default)
;  %d: time taken to serve the request
;      it can accept the following format:
;      - %{seconds}d (default)
;      - %{milliseconds}d
;      - %{milli}d
;      - %{microseconds}d
;      - %{micro}d
;  %e: an environment variable (same as $_ENV or $_SERVER)
;      it must be associated with embraces to specify the name of the env
;      variable. Some examples:
;      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e
;      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e
;  %f: script filename
;  %l: content-length of the request (for POST request only)
;  %m: request method
;  %M: peak of memory allocated by PHP
;      it can accept the following format:
;      - %{bytes}M (default)
;      - %{kilobytes}M
;      - %{kilo}M
;      - %{megabytes}M
;      - %{mega}M
;  %n: pool name
;  %o: output header
;      it must be associated with embraces to specify the name of the header:
;      - %{Content-Type}o
;      - %{X-Powered-By}o
;      - %{Transfert-Encoding}o
;      - ....
;  %p: PID of the child that serviced the request
;  %P: PID of the parent of the child that serviced the request
;  %q: the query string
;  %Q: the '?' character if query string exists
;  %r: the request URI (without the query string, see %q and %Q)
;  %R: remote IP address
;  %s: status (response code)
;  %t: server time the request was received
;      it can accept a strftime(3) format:
;      %d/%b/%Y:%H:%M:%S %z (default)
;      The strftime(3) format must be encapsulated in a %{<strftime_format>}t tag
;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
;  %T: time the log has been written (the request has finished)
;      it can accept a strftime(3) format:
;      %d/%b/%Y:%H:%M:%S %z (default)
;      The strftime(3) format must be encapsulated in a %{<strftime_format>}t tag
;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
;  %u: remote user
;
; Default: "%R - %u %t \"%m %r\" %s"
;access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{milli}d %{kilo}M %C%%"

; A list of request_uri values which should be filtered from the access log.
;
; As a security precuation, this setting will be ignored if:
;     - the request method is not GET or HEAD; or
;     - there is a request body; or
;     - there are query parameters; or
;     - the response code is outwith the successful range of 200 to 299
;
; Note: The paths are matched against the output of the access.format tag "%r".
;       On common configurations, this may look more like SCRIPT_NAME than the
;       expected pre-rewrite URI.
;
; Default Value: not set
;access.suppress_path[] = /ping
;access.suppress_path[] = /health_check.php

; The log file for slow requests
; Default Value: not set
; Note: slowlog is mandatory if request_slowlog_timeout is set
;slowlog = log/php82/$pool.slow.log

; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
;request_slowlog_timeout = 0

; Depth of slow log stack trace.
; Default Value: 20
;request_slowlog_trace_depth = 20

; The timeout for serving a single request after which the worker process will
; be killed. This option should be used when the 'max_execution_time' ini option
; does not stop script execution for some reason. A value of '0' means 'off'.
; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
; Default Value: 0
;request_terminate_timeout = 0

; The timeout set by 'request_terminate_timeout' ini option is not engaged after
; application calls 'fastcgi_finish_request' or when application has finished and
; shutdown functions are being called (registered via register_shutdown_function).
; This option will enable timeout limit to be applied unconditionally
; even in such cases.
; Default Value: no
;request_terminate_timeout_track_finished = no

; Set open file descriptor rlimit.
; Default Value: system defined value
;rlimit_files = 1024

; Set max core size rlimit.
; Possible Values: 'unlimited' or an integer greater or equal to 0
; Default Value: system defined value
;rlimit_core = 0

; Chroot to this directory at the start. This value must be defined as an
; absolute path. When this value is not set, chroot is not used.
; Note: you can prefix with '$prefix' to chroot to the pool prefix or one
; of its subdirectories. If the pool prefix is not set, the global prefix
; will be used instead.
; Note: chrooting is a great security feature and should be used whenever
;       possible. However, all PHP paths will be relative to the chroot
;       (error_log, sessions.save_path, ...).
; Default Value: not set
;chroot =

; Chdir to this directory at the start.
; Note: relative path can be used.
; Default Value: current directory or / when chroot
;chdir = /var/www

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environment, this can cause some delay in the page
; process time (several ms).
; Default Value: no
;catch_workers_output = yes

; Decorate worker output with prefix and suffix containing information about
; the child that writes to the log and if stdout or stderr is used as well as
; log level and time. This options is used only if catch_workers_output is yes.
; Settings to "no" will output data as written to the stdout or stderr.
; Default value: yes
;decorate_workers_output = no

; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
; Setting to "no" will make all environment variables available to PHP code
; via getenv(), $_ENV and $_SERVER.
; Default Value: yes
;clear_env = no

; Limits the extensions of the main script FPM will allow to parse. This can
; prevent configuration mistakes on the web server side. You should only limit
; FPM to .php extensions to prevent malicious users to use other extensions to
; execute php code.
; Note: set an empty value to allow all extensions.
; Default Value: .php
;security.limit_extensions = .php .php3 .php4 .php5 .php7

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
; Default Value: clean env
;env[HOSTNAME] = $HOSTNAME
;env[PATH] = /usr/local/bin:/usr/bin:/bin
;env[TMP] = /tmp
;env[TMPDIR] = /tmp
;env[TEMP] = /tmp

; Additional php.ini defines, specific to this pool of workers. These settings
; overwrite the values previously defined in the php.ini. The directives are the
; same as the PHP SAPI:
;   php_value/php_flag             - you can set classic ini defines which can
;                                    be overwritten from PHP call 'ini_set'.
;   php_admin_value/php_admin_flag - these directives won't be overwritten by
;                                     PHP call 'ini_set'
; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.

; Defining 'extension' will load the corresponding shared extension from
; extension_dir. Defining 'disable_functions' or 'disable_classes' will not
; overwrite previously defined php.ini values, but will append the new value
; instead.

; Note: path INI options can be relative and will be expanded with the prefix
; (pool, global or /usr)

; Default Value: nothing is defined by default except the values in php.ini and
;                specified at startup with the -d argument
;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
;php_flag[display_errors] = off
;php_admin_value[error_log] = /var/log/php82/$pool.error.log
;php_admin_flag[log_errors] = on
;php_admin_value[memory_limit] = 32M
```

### ./srcs/requirements/mariadb/Dockerfile
```
# Base image
FROM alpine:3.20

# Install MariaDB
RUN apk update && \
    apk add --no-cache mariadb mariadb-client

# Create necessary directories and set permissions
RUN mkdir -p /var/lib/mysql /var/log/mysql /run/mysqld && \
    chown -R mysql:mysql /var/lib/mysql /var/log/mysql /run/mysqld

# Copy MariaDB configuration

# Initialize MariaDB database
# RUN mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

# 임시 주석
# Copy initialization scripts
# COPY conf/my.cnf /etc/mysql/my.cnf.d/
# COPY ./conf/my.cnf /etc/my.cnf.d/
COPY ./tools /var/www/tools

# Ensure initialization scripts have execution permissions
# RUN chmod 644 /etc/my.cnf.d/my.cnf
RUN chmod +x /var/www/tools/init_db.sql
RUN chmod +x /var/www/tools/entrypoint.sh

# Run MariaDB server and initialize database
ENTRYPOINT ["/var/www/tools/entrypoint.sh"]

# Default command
CMD ["mysqld"]


# RUN echo "This is a log file" > /var/log/mylog.log
# ENTRYPOINT ["tail", "-f", "/var/log/mylog.log"]

```

### ./srcs/requirements/mariadb/tools/entrypoint.sh
```.sh
#!/bin/sh
# 명령이 실패하면 스크립트를 종료합니다
set -e

# MariaDB를 백그라운드에서 시작합니다
mariadbd --user=mysql &

# MariaDB가 시작될 때까지 잠시 기다립니다
sleep 10

# # 데이터베이스를 초기화합니다
rm -rf /var/lib/mysql/*
mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
mysql -u root < /var/www/tools/init_db.sql

# # 초기화 스크립트를 삭제합니다
# rm -f /var/www/tools/init_db.sql

# Wait for MariaDB to be ready and then bring it to the foreground
wait

```

### ./srcs/requirements/mariadb/tools/init_db.sql
```.sql
-- init_db.sql

-- DB 생성
CREATE DATABASE IF NOT EXISTS wpdb;

-- 계정 생성 및 패스워드 설정
CREATE USER IF NOT EXISTS 'seokjyan'@'localhost' IDENTIFIED BY '1234';

-- 계정이 DB에 접근할 수 있는 모든 권한 부여
GRANT ALL ON wpdb.* TO 'seokjyan'@'localhost' IDENTIFIED BY '1234' WITH GRANT OPTION;

-- 설정을 마침 권한을 적용
FLUSH PRIVILEGES;

-- 종료
exit

-- 조회 관련 명령어
-- SELECT USER(); -- 현재 접속한 계정 정보
-- SHOW DATABASES; -- DB 목록 조회
-- SHOW GRANTS FOR 'seokjyan'@'localhost'; -- 계정 권한 조회
-- SELECT User, Host FROM mysql.user; -- 계정 목록 조회

```

### ./srcs/requirements/mariadb/conf/my.cnf
```.cnf

   
#
#These groups are read by MariaDB server.
#Use it for options that only the server (but not clients) should see
#
#See the examples of server my.cnf files in /usr/share/mysql

#this is read by the standalone daemon and embedded servers
[server]

#this is only for the mysqld standalone daemon
[mysqld]

#
# * Basic Settings
#
user                    = mysql
pid-file                = /run/mysqld/mysqld.pid
socket                  = /run/mysqld/mysqld.sock
port                    = 3306
basedir                 = /usr
datadir                 = /var/lib/mysql
tmpdir                  = /tmp
lc-messages-dir         = /usr/share/mysql
#skip-external-locking

#Instead of skip-networking the default is now to listen only on
#localhost which is more compatible and is not less secure.
#bind-address            = 127.0.0.1

#
# * Fine Tuning
#
#key_buffer_size        = 16M
#max_allowed_packet     = 16M
#thread_stack           = 192K
#thread_cache_size      = 8
# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
#myisam_recover_options = BACKUP
#max_connections        = 100
#table_cache            = 64
#thread_concurrency     = 10

#
# * Query Cache Configuration
#
#query_cache_limit      = 1M
query_cache_size        = 16M

#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# As of 5.1 you can enable the log at runtime!
#general_log_file       = /var/log/mysql/mysql.log
#general_log            = 1
#
# Error log - should be very few entries.
#
log_error = /var/log/mysql/error.log
#
# Enable the slow query log to see queries with especially long duration
#slow_query_log_file    = /var/log/mysql/mariadb-slow.log
#long_query_time        = 10
#log_slow_rate_limit    = 1000
#log_slow_verbosity     = query_plan
#log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
#server-id              = 1
#log_bin                = /var/log/mysql/mysql-bin.log
expire_logs_days        = 10
#max_binlog_size        = 100M
#binlog_do_db           = include_database_name
#binlog_ignore_db       = exclude_database_name

#
# * Security Features
#
# Read the manual, too, if you want chroot!
#chroot = /var/lib/mysql/
#
# For generating SSL certificates you can use for example the GUI tool "tinyca".
#
#ssl-ca = /etc/mysql/cacert.pem
#ssl-cert = /etc/mysql/server-cert.pem
#ssl-key = /etc/mysql/server-key.pem
#
# Accept only connections using the latest and most secure TLS protocol version.
# ..when MariaDB is compiled with OpenSSL:
#ssl-cipher = TLSv1.2
# ..when MariaDB is compiled with YaSSL (default in Debian):
#ssl = on

#
# * Character sets
#
# MySQL/MariaDB default is Latin1, but in Debian we rather default to the full
# utf8 4-byte character set. See also client.cnf
#
character-set-server  = utf8mb4
collation-server      = utf8mb4_general_ci

#
# * InnoDB
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!

#
# * Unix socket authentication plugin is built-in since 10.0.22-6
#
# Needed so the root database user can authenticate without a password but
# only when running as the unix root user.
#
# Also available for other users if required.
# See https://mariadb.com/kb/en/unix_socket-authentication-plugin/

# this is only for embedded server
[embedded]

# This group is only read by MariaDB servers, not by MySQL.
# If you use the same .cnf file for MySQL and MariaDB,
# you can put MariaDB-only options here
[mariadb]

# This group is only read by MariaDB-10.3 servers.
# If you use the same .cnf file for MariaDB of different versions,
# use this group for options that older servers don't understand
[mariadb-10.3]
```

### ./srcs/requirements/mariadb/conf/mariadb-server.cnf
```.cnf
#
# These groups are read by MariaDB server.
# Use it for options that only the server (but not clients) should see

# this is read by the standalone daemon and embedded servers
[server]

# this is only for the mysqld standalone daemon
[mysqld]
skip-networking

# Galera-related settings
[galera]
# Mandatory settings
#wsrep_on=ON
#wsrep_provider=
#wsrep_cluster_address=
#binlog_format=row
#default_storage_engine=InnoDB
#innodb_autoinc_lock_mode=2
#
# Allow server to accept connections on all interfaces.
#
#bind-address=0.0.0.0
#
# Optional setting
#wsrep_slave_threads=1
#innodb_flush_log_at_trx_commit=0

# this is only for embedded server
[embedded]

# This group is only read by MariaDB servers, not by MySQL.
# If you use the same .cnf file for MySQL and MariaDB,
# you can put MariaDB-only options here
[mariadb]

# This group is only read by MariaDB-10.5 servers.
# If you use the same .cnf file for MariaDB of different versions,
# use this group for options that older servers don't understand
[mariadb-10.5]
```

### ./srcs/requirements/nginx/Dockerfile
```
FROM alpine:latest

# Install necessary packages
RUN apk add --no-cache dumb-init nginx openssl

COPY ./conf/default.conf /etc/nginx/http.d/default.conf

COPY ./tools/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT [ "/entrypoint.sh" ]

```

### ./srcs/requirements/nginx/tools/entrypoint.sh
```.sh
#!/bin/sh

set -e

# 파일 경로 설정
KEY_FILE_PATH="/etc/nginx/.key/Pri/nginx.key"
CRT_FILE_PATH="/etc/nginx/.key/Cert/nginx.crt"

# 인증서와 키 파일을 환경변수로부터 작성
mkdir -p "$(dirname "$KEY_FILE_PATH")"  # 디렉토리가 없으면 생성
mkdir -p "$(dirname "$CRT_FILE_PATH")"

echo "$SSL_KEY" > "$KEY_FILE_PATH"
echo "SSL key has been saved to $KEY_FILE_PATH"

echo "$SSL_CERT" > "$CRT_FILE_PATH"
echo "SSL certificate has been saved to $CRT_FILE_PATH"

# NGINX를 포그라운드 모드에서 실행하여 컨테이너가 계속 실행되도록 설정
exec nginx -g 'daemon off;'

```

### ./srcs/requirements/nginx/conf/default.conf
```.conf
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name localhost;

    # SSL 인증서 경로 설정
    ssl_certificate /etc/nginx/.key/Cert/nginx.crt;
    ssl_certificate_key /etc/nginx/.key/Pri/nginx.key;

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;

    # 웹사이트의 루트 디렉토리와 인덱스 파일 설정
    root /var/www/html;
    index index.php;

    # WordPress 기본 설정
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP 파일 처리 설정
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass wordpress:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # fastcgi_index index.php;
    }

    # 로그 파일 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

```

